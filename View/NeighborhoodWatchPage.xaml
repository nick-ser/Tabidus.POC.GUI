<Page x:Class="Tabidus.POC.GUI.View.NeighborhoodWatchPage"
      xmlns:igDP="http://schemas.infragistics.com/xaml/wpf"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:Tabidus.POC.GUI.View"
      xmlns:discovery="clr-namespace:Tabidus.POC.GUI.UserControls.Discovery"
      xmlns:ig="http://schemas.infragistics.com/xaml"
      mc:Ignorable="d">
    <Page.Resources>
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0"/>
                            <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <Rectangle Grid.Row="1" Grid.Column="1" Fill="Transparent"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.Resources>
            <DataTemplate x:Key="dt">
                <TextBlock Text="New Computer"></TextBlock>
            </DataTemplate>
            <Style TargetType="CheckBox">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <!--<Setter Property="Width" Value="300"></Setter>-->
                <Setter Property="Content" Value=""></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Image x:Name="UnCheck" Source="../../Images/box.png" Height="15" Width="16" HorizontalAlignment="Left" Margin="5 0 0 0 "></Image>
                                <Image x:Name="Check" Source="../../Images/check.png" Height="15" Width="16" HorizontalAlignment="Left" Margin="5 0 0 0 "></Image>
                                <ContentPresenter x:Name="content" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30 0 0 0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="UnCheck" Property="Visibility" Value="Hidden"/>
                                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="UnCheck" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="Check" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="111" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="160"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <discovery:NeighborhoodHeaderElement x:Name="NeighborhoodHeaderElement" Grid.Row="0" Grid.ColumnSpan="2"/>
        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical" Margin="0,10,0,0" >
            <!--<StackPanel Height="35" Background="#08FFFFFF" >-->
            <StackPanel Height="35" Background="#0FFFFFFF" >
                    <TextBlock Text="NETWORKS" FontSize="10" Margin="15 10 5 0 " 
                               Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left"
                               FontFamily="{DynamicResource ResourceKey=Myraidproregular}"></TextBlock>
            </StackPanel>
            <StackPanel x:Name="PnlNetworks" Background="#08FFFFFF">
            </StackPanel>
        </StackPanel>
        <ScrollViewer Grid.Row="1" Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <igDP:XamDataGrid x:Name="NeighborhoodWatchDataGrid" Grid.Row="1" Grid.Column="1" MinHeight="200" Margin="10,10,0,10"  Background="Transparent"
		                  DataSource="{Binding NeighborhoodList}">
                <igDP:XamDataGrid.Resources>
                    <!--<Style TargetType="{x:Type ScrollViewer}">
                    <EventSetter Event="ScrollChanged" Handler="NeighborhoodWatchDataGrid_ScrollViewer_ScrollChanged"/>
                </Style>-->
                    <Style x:Key="CheckboxCellStyle"
                       TargetType="{x:Type igDP:CellValuePresenter}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">
                                    <Border BorderThickness="0"
                                            BorderBrush="{TemplateBinding BorderBrush}">
                                        <CheckBox Command="local:NeighborhoodWatchPage.CheckboxCommand"
                                                  CommandParameter="{Binding Path=DataItem}"
                                                  HorizontalAlignment="Center"
                                                  IsChecked="{Binding Path=DataItem.Confirmed}"
                                                  VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="IconCellStyle" TargetType="{x:Type igDP:CellValuePresenter}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">
                                    <DockPanel>
                                        <!-- Give the left edge of the cell a vertical line. -->
                                        <Border DockPanel.Dock="Left"
                                        BorderBrush="#FFEEEEEE"
                                        BorderThickness="1,0,0,0" />
                                        <StackPanel Orientation="Horizontal"
                                            HorizontalAlignment="Center">
                                            <Grid>
                                                <Image Source="{Binding Path=DataItem.ComputerType, Converter={StaticResource ComputerImageTypeConverter}}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Width="16"
                                               Height="16" />
                                            </Grid>
                                        </StackPanel>
                                    </DockPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- This Style puts a CheckBox into the header area above the record selectors. -->
                    <!--                <Style TargetType="{x:Type igDP:HeaderPrefixArea}">-->
                    <!--                    <Setter Property="Visibility"-->
                    <!--                            Value="Visible" />-->
                    <!--                    <Setter Property="Template">-->
                    <!--                        <Setter.Value>-->
                    <!--                            <ControlTemplate TargetType="{x:Type igDP:HeaderPrefixArea}">-->
                    <!--                                <CheckBox HorizontalAlignment="Center"-->
                    <!--                                          VerticalAlignment="Center"-->
                    <!--                                          IsChecked="{Binding Path=DataPresenter.DataContext.AllMembersAreChecked, Mode=TwoWay}" />-->
                    <!--                            </ControlTemplate>-->
                    <!--                        </Setter.Value>-->
                    <!--                    </Setter>-->
                    <!--                </Style>-->
                    <!-- _________________________ LabelPresenter __________________________________________ -->
                    <Style TargetType="{x:Type igDP:LabelPresenter}">
                        <Setter Property="Padding" Value="13 4"/>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="LabelHighlight" Value="{StaticResource backgroundColorCodeBrush}"/>
                        <Setter Property="InnerBorderBrush" Value="{StaticResource backgroundColorCodeBrush}"/>
                        <Setter Property="OuterBorderBrush" Value="{StaticResource backgroundColorCodeBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelForeground}}"/>
                        <Setter Property="Typography.Capitals" Value="AllSmallCaps"></Setter>
                        <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=Myraidproregular}" ></Setter>
                        <Setter Property="FontSize" Value="10"></Setter>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>


                        <!--SSP 7/6/09 - Field Chooser - Added ToolTip property on the field.-->
                        <Setter Property="ToolTip" Value="{Binding Path=Field.ToolTip, RelativeSource={x:Static RelativeSource.Self}}" />
                        <EventSetter Event="SizeChanged" 
                             Handler="Field_Resized"/>
                        <EventSetter Event="Loaded" 
                             Handler="Field_Loaded"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type igDP:LabelPresenter}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="sbHighlightOn">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
                                                <SplineDoubleKeyFrame Value="0" KeyTime="00:00:00"/>
                                                <SplineDoubleKeyFrame Value="1" KeyTime="00:00:00.1750000"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fishHeadHighlight">
                                                <SplineDoubleKeyFrame Value="0" KeyTime="00:00:00"/>
                                                <SplineDoubleKeyFrame Value="1" KeyTime="00:00:00.1750000"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="sbHighlightOff">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
                                                <SplineDoubleKeyFrame Value="0" KeyTime="00:00:00.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fishHeadHighlight">
                                                <SplineDoubleKeyFrame Value="0" KeyTime="00:00:00.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="SigmaFadeIn">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="SigmaFadeOut">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryButton" Storyboard.TargetProperty="(UIElement.Opacity)" FillBehavior="Stop">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedButton" Storyboard.TargetProperty="(UIElement.Opacity)" FillBehavior="Stop">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="SigmaFadeInFilterButton">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="SigmaFadeOutFilterButton">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterButton" Storyboard.TargetProperty="(UIElement.Opacity)" FillBehavior="Stop">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="labelCntr" Margin="0,0,0,0" Background="{StaticResource backgroundColorCodeBrush}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition x:Name="fishColumn" Width="0"/>
                                        </Grid.ColumnDefinitions>
                                        <!-- Background Bar -->
                                        <Border
							Width="Auto"
							Height="Auto"
							RenderTransformOrigin="0.5,0.5"
							CornerRadius="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelCornerRadius}}"
							SnapsToDevicePixels="True"
							Background="{TemplateBinding Background}"
							x:Name="background"/>
                                        <!-- Highlight -->
                                        <Border
							x:Name="highlight"
							Opacity="0"
							Width="Auto"
							Height="Auto"
							CornerRadius="2,2,2,2"

							Background="{TemplateBinding LabelHighlight}"
							SnapsToDevicePixels="True"/>
                                        <Border
							BorderBrush="#33000000"
							BorderThickness="2,0,0,0"
							CornerRadius="1.55015910897703"
							Background="Transparent"
							Margin="0,0,0,0"
							x:Name="lineOuter"
							Width="Auto"
							Height="Auto"
							SnapsToDevicePixels="True"/>
                                        <Border
							BorderBrush="{TemplateBinding InnerBorderBrush}"
							BorderThickness="1"
							CornerRadius="0.550159108977027"
							Background="Transparent"
							Margin="1,1,1,1"
							x:Name="lineInner"
							Width="Auto"
							Height="Auto"
							SnapsToDevicePixels="True"/>
                                        <Path x:Name="fishHeadOuterStroke" SnapsToDevicePixels="True" Visibility="Collapsed" Fill="{TemplateBinding OuterBorderBrush}" Grid.Column="1" Stretch="Fill" Data="M 0,20 C0,20 8,12 8,12 9,11 9,9 8,8 8,8 0,0 0,0 0,0 0,20 0,20 z" />
                                        <Path x:Name="fishHead" SnapsToDevicePixels="True" Visibility="Collapsed" Fill="{TemplateBinding Background}" Grid.Column="1" Margin="0,1,1,1" Stretch="Fill" Data="M 0,20 C0,20 8,12 8,12 9,11 9,9 8,8 8,8 0,0 0,0 0,0 0,20 0,20 z" />
                                        <Path x:Name="fishHeadHighlight" SnapsToDevicePixels="True" Visibility="Collapsed" Fill="{TemplateBinding LabelHighlight}" Opacity="0"  Grid.Column="1" Margin="0,1,1,1" Stretch="Fill" Data="M 0,20 C0,20 8,12 8,12 9,11 9,9 8,8 8,8 0,0 0,0 0,0 0,20 0,20 z"/>
                                        <Path
							x:Name="fishHeadInnerStroke"
							Visibility="Collapsed"
							Stretch="Fill"
							Data="M 0,20 C0,20 8,12 8,12 9,11 9,9 8,8 8,8 0,0 0,0 0,0 0,1 0,1 0,1 7,8 7,8 8,9 8,11 7,12 7,12 0,19 0,19 0,19 0,20 0,20 z"
							Fill="{TemplateBinding InnerBorderBrush}"
							Grid.Column="1"
							Margin="-1,1,1,1"
							SnapsToDevicePixels="True"/>
                                        <Grid
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							x:Name="sortIndicatorAndLabel">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter
								x:Name="LabelContent"
								Focusable="False"
								Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								d:LayoutOverrides="Width, Height"
								VerticalAlignment="Center"/>
                                            <igDP:SortIndicator
								x:Name="SortIndicator"
								SortStatus="{TemplateBinding SortStatus}"
								Visibility="Collapsed"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Width="Auto"
								Grid.Column="1"
								Margin="5,0,0,0"/>
                                            <!-- SSP 3/31/08 - Summaries Functionality -->
                                            <igDP:SummaryButton
								x:Name="SummaryButton"
								Field="{TemplateBinding Field}"
								Visibility="{Binding Path=Field.AllowSummariesResolved, Converter={StaticResource BoolToVisConverter}, RelativeSource={RelativeSource TemplatedParent}}"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Width="Auto"
								Grid.Column="2"
								Margin="5,0,0,0"
								Opacity="0.4"/>
                                            <!-- JJD 1/06/09 - Filtering Functionality -->
                                            <igDP:FilterButton
								x:Name="FilterButton"
								Field="{TemplateBinding Field}"
								Visibility="{TemplateBinding FilterButtonVisibility}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Width="Auto"
								Grid.Column="3"
                                Opacity="0.4"
								Margin="5,0,0,0"/>
                                            <!-- JM 1/14/09 - Fixed Fields Functionality -->
                                            <igDP:FixedFieldButton
								x:Name="FixedButton"
								Field="{TemplateBinding Field}"
								Visibility="{TemplateBinding FixedButtonVisibility}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Width="Auto"
								Grid.Column="4"
								Margin="2,0,2,0"
								Opacity="0.4"/>
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <!--<DataTrigger Binding="{Binding Path=Field.LabelTextAlignmentResolved, RelativeSource={RelativeSource Self}}" Value="Center">
                            <Setter Property="HorizontalAlignment" TargetName="sortIndicatorAndLabel" Value="Center"/>
                        </DataTrigger>-->
                                        <!--<Trigger Property="IsDragSource" Value="True">
							<Setter TargetName="highlight" Property="Opacity" Value="1"/>
							<Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1"/>
						</Trigger>-->

                                        <!-- HighlightPrimary -->
                                        <Trigger Property="HighlightAsPrimary" Value="true">
                                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1"/>
                                        </Trigger>
                                        <Trigger Property="HorizontalAlignment" Value="Center">
                                            <Setter Property="VerticalAlignment" TargetName="SortIndicator" Value="Top"/>
                                            <Setter Property="HorizontalAlignment" TargetName="SortIndicator" Value="Center"/>
                                            <Setter Property="Margin" TargetName="SortIndicator" Value="0,5,0,0"/>
                                        </Trigger>
                                        <!-- Only animate highlight -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <!--<Condition Property="SortStatus" Value="NotSorted"/>-->
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource sbHighlightOn}" x:Name="sbHighlightOn_BeginStoryboard"/>
                                                <BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}" x:Name="SigmaFadeIn_BeginStoryboard"/>
                                                <BeginStoryboard x:Name="SigmaFadeIn_BeginStoryboard1" Storyboard="{StaticResource SigmaFadeIn}"/>
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource sbHighlightOff}" x:Name="sbHighlightOff_BeginStoryboard"/>
                                                <BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}" x:Name="SigmaFadeOut_BeginStoryboard"/>
                                                <StopStoryboard BeginStoryboardName="SigmaFadeIn_BeginStoryboard1"/>
                                                <StopStoryboard BeginStoryboardName="sbHighlightOn_BeginStoryboard"/>
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="FilterButton" Property="HasActiveFilters" Value="False"/>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <!-- JM 04-09-09 Comment these animations out for now to address TFS 16564.  This bug was discovered as we were getting ready to release
											 the April 2009 9.1 Hotfix and is caused by a bug in the WPF framework that we will need to work around by
											 replacing this MultiTrigger with a MultiDataTrigger. -->
                                            <!--<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="SigmaFadeIn_FB_BeginStoryboard" Storyboard="{StaticResource SigmaFadeInFilterButton}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource SigmaFadeOutFilterButton}" x:Name="SigmaFadeOut_FB_BeginStoryboard"/>
								<RemoveStoryboard BeginStoryboardName="SigmaFadeIn_FB_BeginStoryboard"/>
							</MultiTrigger.ExitActions>-->
                                            <Setter TargetName="FilterButton" Property="Opacity" Value="1"/>
                                        </MultiTrigger>
                                        <Trigger SourceName="FilterButton" Property="HasActiveFilters" Value="True">
                                            <Setter TargetName="FilterButton" Property="Opacity" Value="1"/>
                                        </Trigger>
                                        <Trigger Property="SortStatus" Value="Ascending">
                                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1"/>
                                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
                                            <Setter Property="Background" Value="{StaticResource backgroundColorCodeBrush}"/>
                                        </Trigger>
                                        <Trigger Property="SortStatus" Value="Descending">
                                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1"/>
                                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
                                            <Setter Property="Background" Value="{StaticResource backgroundColorCodeBrush}"/>
                                        </Trigger>

                                        <DataTrigger Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="SummaryButton" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="background" Property="CornerRadius" Value="2,0,0,2"/>
                                            <Setter TargetName="highlight" Property="CornerRadius" Value="2,0,0,2"/>
                                            <Setter TargetName="lineOuter" Property="CornerRadius" Value="2,0,0,2"/>
                                            <Setter TargetName="lineInner" Property="CornerRadius" Value="2,0,0,2"/>
                                            <Setter TargetName="background" Property="BorderThickness" Value="1,1,0,1"/>
                                            <Setter TargetName="lineOuter" Property="BorderThickness" Value="1,1,0,1"/>
                                            <Setter TargetName="lineInner" Property="BorderThickness" Value="1,1,0,1"/>
                                            <Setter TargetName="lineInner" Property="Margin" Value="1,1,0,1"/>
                                            <Setter TargetName="fishHeadOuterStroke" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="fishHead" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="fishHeadHighlight" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="fishHeadInnerStroke" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="fishColumn" Property="Width" Value="14"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Field).(igDP:GroupByAreaMulti.HasOffsetY), RelativeSource={RelativeSource Self}}" Value="False"/>
                                                <Condition Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="labelCntr" Property="Margin" Value="-24,4,2,4"/>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Field).(igDP:GroupByAreaMulti.HasOffsetY), RelativeSource={RelativeSource Self}}" Value="False"/>
                                                <Condition Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                <Condition Binding="{Binding Path=(Field).(igDP:GroupByAreaMulti.IsFirstInList), RelativeSource={RelativeSource Self}}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Padding" Value="25,4,5,4"/>
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding Path=(Field).(igDP:GroupByAreaMulti.IsFirstInList), RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter TargetName="labelCntr" Property="Margin" Value="2,4,2,4"/>
                                        </DataTrigger>

                                        <!--SSP 6/23/09 - NAS9.2 Field Chooser
							If the label is in a field chooser then hide the sort indicator, filter button and
							summary button. Note that the fixed button is collapsed in code in label presenter
							by coercing the FixedButtonVisibility property to be Collapsed.-->
                                        <Trigger Property="IsInFieldChooser" Value="true">
                                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="FilterButton" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="SummaryButton" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="labelCntr" Property="Margin" Value="0,0,0,0"/>
                                        </Trigger>

                                        <Trigger Property="IsDragIndicator" Value="True">
                                            <Setter Property="Padding" Value="7,4"/>
                                            <Setter TargetName="labelCntr" Property="Margin" Value="2,4"/>
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="highlight" Property="Opacity" Value="0"/>
                                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="0"/>
                                        </Trigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--<Style TargetType="{x:Type igDP:DataRecordCellArea}">
                    <Setter Property="BackgroundHover" Value="#66000000"></Setter>
                    <Setter Property="BorderHoverBrush" Value="Transparent"/>
                </Style>-->

                    <!--Hover Effect for Data Record 16-04-2019-->
                    <Style TargetType="{x:Type igDP:DataRecordCellArea}">
                        <Setter Property="BackgroundHover" Value="#66000000" />
                        <Setter Property="BorderHoverBrush" Value="Transparent"/>
                        <Setter Property="BackgroundSelected" Value="Transparent"/>
                        <Setter Property="BackgroundActive" Value="Transparent"/>
                        <Setter Property="BorderActiveBrush" Value="Transparent"/>
                        <Setter Property="BorderSelectedBrush" Value="Transparent"/>
                    </Style>
                    <!--Remove Selected Cell effect 19-04-2019 -->
                    <!--<Style TargetType="{x:Type igDP:CellValuePresenter}">
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="BackgroundHover" Value="Transparent"/>
                    <Setter Property="BackgroundSelected" Value="Transparent"/>
                    <Setter Property="BackgroundActive" Value="Transparent"/>
                    <Setter Property="BorderActiveBrush" Value="Transparent"/>
                    <Setter Property="BorderHoverBrush" Value="Transparent"/>
                    <Setter Property="BorderSelectedBrush" Value="Transparent"/>
                </Style>-->

                    <Style TargetType="{x:Type igDP:SortIndicator}">
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="MinHeight" Value="3.5"/>
                        <Setter Property="MinWidth" Value="7"/>
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type igDP:SortIndicator}">
                                    <Polygon x:Name="Arrow" Fill="{TemplateBinding Background}" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" Points="0,0 14,0 7,7"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="SortStatus" Value="Descending">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="SortStatus" Value="Ascending">
                                            <Setter Property="Points" TargetName="Arrow" Value="0,7 14,7 7,0"/>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFFFFFFF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- This Style puts a CheckBox into the record selectors. -->
                        <Style TargetType="{x:Type igDP:RecordSelector}"
                       BasedOn="{x:Null}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type igDP:RecordSelector}">
                                        <CheckBox HorizontalAlignment="Center"  
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding Path=DataItem.IsSelected, Mode=TwoWay}">
                                        </CheckBox>
                                    </ControlTemplate>
                                </Setter.Value>

                            </Setter>
                        </Style>
                    <!--<Style TargetType="{x:Type igDP:RecordSelector}"
                       BasedOn="{x:Null}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type igDP:RecordSelector}">
                                    <CheckBox HorizontalAlignment="Center"  
                                          VerticalAlignment="Center" Grid.Row="0" Grid.RowSpan="2" Width="30"
                                          IsChecked="{Binding Path=DataItem.IsSelected, Mode=TwoWay}">
                                    </CheckBox>
                                </ControlTemplate>
                            </Setter.Value>
                          
                        </Setter>
                    </Style>-->

                    <Style TargetType="{x:Type igDP:DataRecordPresenter}">
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="HeaderAreaBackground" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, LabelBackground}}"/>
                        <Setter Property="NestedContentBackground" Value="Transparent"/>
                        <Setter Property="Background" Value="#08FFFFFF"/>
                        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
                        <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=OpenSansRegular}" />
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type igDP:DataRecordPresenter}">
                                    <igDP:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
                                        <Border
							Visibility="Collapsed"
							Background="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, AddRowBackground}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							HorizontalAlignment="Stretch"
							x:Name="addRowFooter"
							VerticalAlignment="Stretch"
							Width="Auto"
							Height="Auto"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Grid Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - added 1 column definition-->
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <!-- SSP 5/6/08 - Record Separators - Added two col defs-->
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - added 1 row definition-->
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <!-- SSP 5/6/08 - Record Separators - Added two row defs-->
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <!-- Expansion Checkbox -->
                                            <!-- SSP 5/6/08 - Record Separators - changed grid.row to 2 from 1-->
                                            <!-- AS 1/27/09 NA 2009 Vol 1 - Set ZIndex and RenderTransform for fixed fields -->
                                            <!-- AS 6/3/09 NA 2009 Vol 2 - Added Command(Parameter) & ToggleMode to support undo/redo -->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <Border x:Name="OrientationHorizontalSep" BorderThickness="0,0,1,0" Grid.ColumnSpan="6" Background="#FFFAFAFA" BorderBrush="#FFE7E7E7"  Visibility="Collapsed"/>
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <igDP:ExpansionIndicator
								x:Name="ExpansionIndicator"
                                Panel.ZIndex="1"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Grid.Row="3"
								Grid.Column="1"
								Visibility="{Binding Path=ExpansionIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
							  Command="{x:Static igDP:DataPresenterCommands.ToggleRecordIsExpanded}"
							  CommandParameter="{TemplateBinding Record}"
							  ToggleMode="Manual"
								IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <!-- Header Background -->
                                            <!-- Added 8/2/2006 GH -->
                                            <!-- SSP 5/6/08 - Record Separators - changed grid.colspan to 5 from 3-->
                                            <!-- AS 2/10/09 TFS13798 - Set RenderTransform for fixed fields -->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <igDP:CardPanel
								x:Name="SpacerFill"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Grid.Row="1"
								Grid.Column="1"
								Grid.ColumnSpan="6"
								Visibility="Visible">
                                                <Rectangle x:Name="fill" Margin="0,0,0,0" Fill="#08FFFFFF"/>
                                                <Rectangle
									x:Name="lightLine"
									Fill="#3FFFFFFF"
									VerticalAlignment="Top"
									Margin="0"
									Width="Auto"
									Height="0"/>
                                                <Rectangle
									x:Name="darkLine"
									Fill="#66000000"
									VerticalAlignment="Top"
									Margin="0"
									Width="Auto"
									Height="0"/>
                                            </igDP:CardPanel>
                                            <!-- End Added 8/2/2006 GH -->
                                            <!-- Header Content -->
                                            <!-- SSP 5/6/08 - Record Separators - changed grid.col to 2 from 1-->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <ContentPresenter
								x:Name="PART_HeaderContentSite"
								Grid.Row="1"
								Grid.Column="3"
								Content="{TemplateBinding HeaderContent}"
								Visibility="Visible"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								/>
                                            <!-- SSP 5/6/08 - Record Separators - Added separator rectangle -->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <Border
								x:Name="RecordSeparator"
								Grid.Row="2"
								Grid.Column="1"
								Visibility="Collapsed"
								Style="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, RecordSeparatorStyle}}"
								Grid.ColumnSpan="6"/>
                                            <!-- Record Content -->
                                            <!-- SSP 5/6/08 - Record Separators - changed grid.row to 2 from 1 and grid.col to 2 from 1-->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <ContentPresenter
								x:Name="PART_RecordContentSite"
								Grid.Row="3"
								Grid.Column="3"
								Content="{TemplateBinding DataContext}"
								ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <!-- Nested Content -->
                                            <!-- SSP 5/6/08 - Record Separators - changed grid.row to 4 from 2 and grid.col to 2 from 1-->
                                            <!-- AS 3/25/09 TFS15801 - Set RenderTransform for fixed fields -->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <Border
								x:Name="PART_NestedContentSite"
								Grid.Row="5"
								Grid.Column="3"
								Visibility="Visible"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Background="{TemplateBinding NestedContentBackground}">
                                                <!-- AS 11/14/07 BR26035 
								The namescope was broken because the recordlistcontrol was not in the logical tree. We 
								need to use a ContentControl instead so the content	is made a logical child. -->
                                                <ContentControl 
                                    RenderTransform="{TemplateBinding ScrollableElementTransform}"
                                    Content="{TemplateBinding NestedContent}" 
                                    Margin="2,0,0,0" 
                                    x:Name="contentControl"/>
                                                <!--Margin="10,10,0,0" />-->
                                            </Border>
                                        </Grid>
                                    </igDP:CardPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <!-- START SSP 5/6/08 - Record Separators
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="2" />
                            <Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="1" />
                            <Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="3" />
														-->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="3"/>
                                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="1"/>
                                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="3"/>
                                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="5"/>
                                            <Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top"/>
                                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1"/>
                                            <Setter TargetName="ExpansionIndicator" Property="Margin" Value="0,2"/>
                                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="3"/>
                                            <Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1"/>
                                            <Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="6"/>
                                            <!--<Setter TargetName="RecordSeparator" Property="Grid.Row" Value="2"/>
							<Setter TargetName="RecordSeparator" Property="Grid.Column" Value="1"/>-->
                                            <Setter TargetName="RecordSeparator" Property="Width" Value="10"/>
                                            <Setter TargetName="RecordSeparator" Property="Height" Value="Auto"/>
                                            <Setter TargetName="RecordSeparator" Property="BorderThickness" Value="1,0"/>
                                            <Setter TargetName="OrientationHorizontalSep" Property="Visibility" Value="Visible"/>
                                            <!-- END SSP 5/6/08 - Record Separators -->
                                        </Trigger>
                                        <Trigger Property="ShouldDisplayRecordContent" Value="False">
                                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Collapsed"/>
                                            <!--JJD 9/4/07 - BR26153 -->
                                            <!--Only set ExpansionIndicator Visibility to Hidden if is was Visible (see new MultiTrigger below) -->
                                            <!--<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />-->
                                        </Trigger>
                                        <!--JJD 9/4/07 - BR26153 -->
                                        <!--Only set ExpansionIndicator Visibility to Hidden if is was Visible -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="ShouldDisplayRecordContent" Value="False"/>
                                                <Condition Property="IsHeaderRecord" Value="False"/>
                                                <Condition Property="ExpansionIndicatorVisibility" Value="Visible"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Orientation" Value="Horizontal"/>
                                                <Condition Property="ShouldDisplayRecordContent" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <!-- START SSP 5/6/08 - Record Separators - Changed Value to 3 from 2-->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <!-- JJD 1/24/11 TFS63831 the value should be 5 to match up with the nested content-->
                                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="5"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Orientation" Value="Vertical"/>
                                                <Condition Property="ShouldDisplayRecordContent" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <!-- START SSP 5/6/08 - Record Separators - Changed Value to 3 from 2-->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <!-- JJD 1/24/11 TFS63831 the value should be 5 to match up with the nested content-->
                                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="5"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsHeaderRecord" Value="True">
                                            <!--JJD 9/4/07 - BR26153 -->
                                            <!--Only set ExpansionIndicator Visibility to Hidden if is was Visible (see new MultiTrigger below) -->
                                            <!--<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />-->
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1"/>
                                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="1"/>
                                        </Trigger>
                                        <!--JJD 9/4/07 - BR26153 -->
                                        <!--Only set ExpansionIndicator Visibility to Hidden if is was Visible -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsHeaderRecord" Value="True"/>
                                                <Condition Property="ExpansionIndicatorVisibility" Value="Visible"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden"/>
                                        </MultiTrigger>
                                        <Trigger Property="HasHeaderContent" Value="False">
                                            <Setter Property="Visibility" TargetName="SpacerFill" Value="Collapsed"/>
                                            <Setter Property="Visibility" TargetName="PART_HeaderContentSite" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasNestedContent" Value="true">
                                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="baseGrid" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Trigger>
                                        <Trigger Property="HasNestedContent" Value="False">
                                            <Setter Property="Visibility" TargetName="PART_NestedContentSite" Value="Collapsed"/>
                                        </Trigger>
                                        <!--SSP 8/5/09 - NAS9.2 Enhanced grid view
							Changed the IsFixedOnTop trigger to MultiDataTrigger since we needed to add IsSpecialRecord
							condition. This was done because previously we were showing separator after each fixed record
							however we should not display the separator between each fixed data record if there are multiple
							fixed data records. The same change was applied to IsFixedOnBottom.
						-->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsSpecialRecord}" Value="true" />
                                                <Condition Binding="{Binding Path=IsFixedOnTop, RelativeSource={RelativeSource Self}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" TargetName="addRowFooter" Value="Visible"/>
                                            <Setter Property="Background" TargetName="addRowFooter" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, FixedRecord}}"/>
                                            <Setter Property="BorderThickness" TargetName="addRowFooter" Value="0,0,0,1"/>
                                            <Setter Property="Margin" Value="0,0,0,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsSpecialRecord}" Value="true" />
                                                <Condition Binding="{Binding Path=IsFixedOnBottom, RelativeSource={RelativeSource Self}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" TargetName="addRowFooter" Value="Visible"/>
                                            <Setter Property="BorderThickness" TargetName="addRowFooter" Value="0,1,0,0"/>
                                            <Setter Property="Background" TargetName="addRowFooter" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, FixedRecord}}"/>
                                            <Setter Property="Margin" Value="0,1,0,0"/>
                                        </MultiDataTrigger>
                                        <!-- START SSP 5/6/08 - Record Separators -->
                                        <!-- For HasSeparatorBefore, default grid.row and grid.column settings are fine as setup 
							when declaring the record separator (and for horizontal orientation as setup in the
							orientation=horizontal trigger above).
						-->
                                        <Trigger Property="HasSeparatorBefore" Value="true">
                                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <!-- For HasSeparatorAfter, we have to set grid.row and grid.col based on the orientation-->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasSeparatorAfter" Value="true"/>
                                                <Condition Property="Orientation" Value="Vertical"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="4"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasSeparatorAfter" Value="true"/>
                                                <Condition Property="Orientation" Value="Horizontal"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="4"/>
                                            <Setter TargetName="RecordSeparator" Property="Grid.ColumnSpan" Value="1"/>
                                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="1"/>
                                            <Setter TargetName="RecordSeparator" Property="Grid.RowSpan" Value="6"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasSeparatorBefore" Value="true"/>
                                                <Condition Property="Orientation" Value="Horizontal"/>
                                            </MultiTrigger.Conditions>
                                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="2"/>
                                            <Setter TargetName="RecordSeparator" Property="Grid.ColumnSpan" Value="1"/>
                                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="1"/>
                                            <Setter TargetName="RecordSeparator" Property="Grid.RowSpan" Value="6"/>
                                        </MultiTrigger>
                                        <!-- END SSP 5/6/08 - Record Separators -->
                                        <!-- Changing opacity of Content to differentiate between filtered records with IsFilteredOut trigger property -->
                                        <Trigger Property="IsFilteredOut" Value="True">
                                            <Setter TargetName="PART_RecordContentSite" Property="Opacity" Value="0.35"/>
                                        </Trigger>
                                        <!--<DataTrigger Binding="{Binding Path=IsAddRecord, RelativeSource={RelativeSource Self}}" Value="Center">
							<Setter Property="BorderThickness" Value="0,0,0,1"/>
						</DataTrigger>-->

                                        <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParent"/>
                                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParent"/>
                                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="0"/>
                                        </MultiDataTrigger>

                                        <!-- MD 8/3/10 - TFS35609 -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParentHeadersAttached"/>
                                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParentHeadersAttached"/>
                                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="0"/>
                                        </MultiDataTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="TemplateCardView">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type igDP:DataRecordPresenter}">
                                    <igDP:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
                                        <!-- Record Content -->
                                        <Rectangle Fill="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, CardBackground}}"/>
                                        <ContentPresenter
							x:Name="PART_RecordContentSite"
							Content="{TemplateBinding DataContext}"
							ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </igDP:CardPanel>
                                    <ControlTemplate.Triggers>
                                        <!-- JM NA 10.1 CardView -->
                                        <Trigger Property="IsInCard" Value="True">
                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type igDP:CellValuePresenter}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BackgroundHover" Value="Transparent"/>
                        <Setter Property="BorderHoverBrush" Value="Transparent"/>
                        <!--<Setter Property="BackgroundActive">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FF85A2B2"/>
                        <GradientStop Offset="1.1" Color="#00FFFFFF"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>-->
                        <Setter Property="BorderActiveBrush" Value="#00151C55"/>
                        <Setter Property="BackgroundSelected">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#FFCAEBFF"/>
                                    <GradientStop Offset="1.1" Color="#00FFFFFF"/>
                                    <GradientStop Color="#83CAEBFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderSelectedBrush" Value="#FF666666"/>
                        <Setter Property="BackgroundFieldSelected">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#FFDDDDDD"/>
                                    <GradientStop Offset="1.1" Color="#00FFFFFF"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderFieldSelectedBrush" Value="#FF666666"/>
                        <Setter Property="BackgroundPrimary" Value="#7FE9E9E9"/>
                        <Setter Property="BorderPrimaryBrush" Value="#FFE9E9E9"/>
                        <Setter Property="ForegroundStyle">
                            <Setter.Value>
                                <Style/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ForegroundActiveStyle" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, GrayForegroundStyle}}" />
                        <Setter Property="ForegroundAlternateStyle" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, GrayForegroundStyle}}" />
                        <Setter Property="ForegroundPrimaryStyle" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, GrayForegroundStyle}}" />
                        <Setter Property="ForegroundSelectedStyle" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, GrayForegroundStyle}}" />
                        <Setter Property="ForegroundFieldSelectedStyle" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, GrayForegroundStyle}}" />
                        <Setter Property="ForegroundHoverStyle" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, GrayForegroundStyle}}" />
                        <Setter Property="CornerRadius" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="2,0,0,0"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <!-- AS 5/23/07 BR23120 -->
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate  TargetType="{x:Type igDP:CellValuePresenter}">
                                    <igDP:CardPanel  MouseDown="CardPanel_MouseDown">
                                        <ig:DragDropManager.DragSource>
                                            <ig:DragSource IsDraggable="True"   
                                               Drop="DragSource_Drop" 
                                               DragOver="DragSource_DragOver" 
                                               DragStart="DragSource_DragStart" 
                                               DragLeave="DragSource_OnDragLeave"
                                               DragEnter="DragSource_DragEnter"
                                               />
                                        </ig:DragDropManager.DragSource>
                                        <!-- [JM 06-06-07] This element is not being used so I am commenting it out.  Its Visibility property is initialized to Collapsed and the IsSelected
                               trigger below has commented out the line that sets the Visibility to Visible. Checked with Grant on this and he feels it is left over
                               from early styling efforts and can be removed. -->
                                        <!--<Rectangle x:Name="LeftBorder" 
							Fill="#FFBBBBBB"
							Width="1" 
							Margin="0,1,0,0" 
							HorizontalAlignment="Left" 
							VerticalAlignment="Stretch"
							Visibility="Collapsed" />-->
                                        <Border
							x:Name="MainBorder"
							CornerRadius="{TemplateBinding CornerRadius}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}"/>
                                        <Rectangle
							x:Name="Active"
							Fill="{TemplateBinding BackgroundActive}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Width="Auto"
							Height="Auto"
							SnapsToDevicePixels="True"
							Opacity="1"
							Visibility="Collapsed"
							StrokeThickness="1"
							Stroke="{TemplateBinding BorderActiveBrush}"/>
                                        <ContentPresenter
							x:Name="PART_EditorSite"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							Style="{TemplateBinding ForegroundStyle}"
						>

                                        </ContentPresenter>
                                    </igDP:CardPanel>
                                    <ControlTemplate.Triggers>
                                        <!-- HighlightAsPrimary -->
                                        <Trigger Property="HighlightAsPrimary" Value="true">
                                            <Setter Property="Background" Value="{Binding Path=BackgroundPrimary, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="BorderBrush" Value="{Binding Path=BorderPrimaryBrush, RelativeSource={RelativeSource Self}}"/>
                                            <Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundPrimaryStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Trigger>
                                        <!-- IsFieldSelected -->
                                        <Trigger Property="IsFieldSelected" Value="true">
                                            <Setter Property="Background" Value="{Binding Path=BackgroundFieldSelected, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="BorderBrush" Value="{Binding Path=BorderFieldSelectedBrush, RelativeSource={RelativeSource Self}}"/>
                                            <Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundFieldSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Trigger>
                                        <!-- IsSelected -->
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" Value="{Binding Path=BackgroundSelected, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="BorderBrush" Value="{Binding Path=BorderSelectedBrush, RelativeSource={RelativeSource Self}}"/>
                                            <Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <!--<Setter Property="Visibility" Value="Visible" TargetName="LeftBorder" />-->
                                        </Trigger>
                                        <!-- IsActive -->
                                        <Trigger Property="IsActive" Value="true">
                                            <Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundActiveStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Visibility" TargetName="Active" Value="Visible"/>
                                        </Trigger>
                                        <!-- IsMouseOver -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                                <Condition Property="IsFieldSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{Binding Path=BackgroundHover, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="BorderBrush" Value="{Binding Path=BorderHoverBrush, RelativeSource={RelativeSource Self}}"/>
                                            <Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundHoverStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </MultiTrigger>
                                        <!-- Field.IsFixedStateChanging    JM 01-22-09 NA 9.1 FixedFields   -->
                                        <DataTrigger Binding="{Binding Path=Field.IsFixedStateChanging, RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Background" Value="#AA8DBAEB"/>
                                            <Setter Property="BorderBrush" Value="#AA8DBAEB"/>
                                        </DataTrigger>
                                        <!--SSP 5/27/09 NAS9.2 IDataErrorInfo Support-->
                                        <Trigger Property="IsDataErrorTemplateActive" Value="true">
                                            <Setter TargetName="PART_EditorSite" Property="ContentTemplate" Value="{DynamicResource {x:Static igDP:DataPresenterBase.DataErrorContentTemplateKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <!-- DRCA Foreground Hover Trigger-->

                            <!-- JJD 4/30/09 - TFS17157 use new IsRecordSelected property -->
                            <Trigger Property="IsRecordSelected" Value="True">
                                <Setter Property="ForegroundStyle" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, GrayForegroundStyle}}" />
                            </Trigger>

                            <!-- DRCA Foreground Selected Trigger-->
                            <!-- JJD 4/30/09 - TFS17157 use new IsMouseOverRecord property -->
                            <Trigger Property="IsMouseOverRecord" Value="True">
                                <!--<Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Foreground" Value="White"/>-->
                                <Setter Property="ForegroundStyle" Value="{DynamicResource {ComponentResourceKey {x:Type igDP:XamDataGrid}, GrayForegroundStyle}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </igDP:XamDataGrid.Resources>
                <igDP:XamDataGrid.CommandBindings>
                    <CommandBinding Command="local:NeighborhoodWatchPage.CheckboxCommand"
                                CanExecute="CheckboxCommand_CanExecute"
                                Executed="CheckboxCommand_Executed" />
                </igDP:XamDataGrid.CommandBindings>
                <igDP:XamDataGrid.FieldLayouts>
                    <igDP:FieldLayout>
                        <igDP:FieldLayout.Settings>
                            <igDP:FieldLayoutSettings AutoArrangeCells="Never"
                            AutoGenerateFields="False" />
                        </igDP:FieldLayout.Settings>
                        <igDP:FieldLayout.Fields>
                            <igDP:Field Name="Computer"
						            Label="COMPUTER"
						            Row="0"
						            Column="0" >
                            </igDP:Field>
                            <igDP:Field Name="Domain"
						            Label="DOMAIN"
						            Row="0"
						            Column="1" />
                            <igDP:Field Name="IPv4"
						            Label="IPv4"
						            Row="0"
						            Column="2" />
                            <igDP:Field Name="MAC"
						            Label="MAC"
						            Row="0"
						            Column="3" Width="150"/>
                            <igDP:Field Name="Vendor"
						            Label="VENDOR"
						            Row="0"
						            Column="4" Width="230" />
                            <igDP:Field Name="OperatingSystem"
						            Label="OS"
						            Row="0"
						            Column="5" Width="100" />
                            <igDP:Field Name="LastDetected"
						            Label="LAST SEEN"
						            Row="0"
						            Column="6">
                                <!--<igDP:Field.Settings>
                                <igDP:FieldSettings>
                                    <igDP:FieldSettings.EditorStyle>
                                        <Style TargetType="{x:Type igDP:XamTextEditor}">
                                            <Setter Property="TextAlignment"
											        Value="Center" />
                                            <Setter Property="HorizontalContentAlignment"
											        Value="Left" />
                                            <Setter Property="Foreground" Value="#8e8f98"/>
                                        </Style>
                                    </igDP:FieldSettings.EditorStyle>
                                </igDP:FieldSettings>
                            </igDP:Field.Settings>-->
                            </igDP:Field>
                            <igDP:Field Name="DetectedBy"
						            Label="DETECTED BY"
						            Row="0"
						            Column="7" Width="100" >

                            </igDP:Field>
                            <igDP:Field Name="Confirmed"
                                           Label="CONFIRMED"
                                       Row="0"
						            Column="8" Width="100">
                                <igDP:Field.Settings>
                                    <igDP:FieldSettings CellValuePresenterStyle="{StaticResource CheckboxCellStyle}" />
                                </igDP:Field.Settings>
                            </igDP:Field>
                        </igDP:FieldLayout.Fields>
                    </igDP:FieldLayout>
                </igDP:XamDataGrid.FieldLayouts>
                <igDP:XamDataGrid.FieldLayoutSettings>
                    <igDP:FieldLayoutSettings DataRecordSizingMode="SizedToContentAndIndividuallySizable" AllowFieldMoving="No" />
                </igDP:XamDataGrid.FieldLayoutSettings>
                <igDP:XamDataGrid.FieldSettings>
                    <igDP:FieldSettings CellClickAction="SelectCell" AllowEdit="True" AllowGroupBy="False" AllowSummaries="False" LabelTextAlignment="Left" LabelHeight="35">
                        <igDP:FieldSettings.EditorStyle>
                            <Style TargetType="{x:Type igDP:XamTextEditor}">
                                <Setter Property="TextWrapping"
							        Value="Wrap" />
                                <!--<Setter Property="Foreground" Value="#8e8f98"/>-->
                                <Setter Property="Padding" Value="13"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Setter Property="FontSize" Value="11" />
                                <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=OpenSansRegular}"></Setter>
                                <Setter Property="Foreground" Value="#FFF" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DataItem.IsSelected}">
                                        <Setter Property="Foreground" Value="#FFF" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=DataItem.IsSelected}" Value="False">
                                        <Setter Property="Foreground" Value="#8e8f98" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </igDP:FieldSettings.EditorStyle>
                    </igDP:FieldSettings>
                </igDP:XamDataGrid.FieldSettings>

            </igDP:XamDataGrid>
        </ScrollViewer>
    </Grid>
</Page>