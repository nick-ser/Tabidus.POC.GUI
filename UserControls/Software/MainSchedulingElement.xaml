<UserControl x:Class="Tabidus.POC.GUI.UserControls.Software.MainSchedulingElement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Tabidus.POC.GUI.UserControls.Software"
             xmlns:common="clr-namespace:Tabidus.POC.GUI.Common"
             mc:Ignorable="d">
    <Grid Margin="0,0,0,10" VerticalAlignment="Top" >
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource textblockColorCodeBrush}"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=OpenSansRegular}"></Setter>
                <Setter Property="FontSize" Value="11" />
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Content" Value=""></Setter>
                <Setter Property="FontSize" Value="10"></Setter>
                <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=OpenSansRegular}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Image x:Name="UnCheck" Source="../../Images/box.png" Height="15" Width="16" HorizontalAlignment="Left"></Image>
                                <Image x:Name="Check" Source="../../Images/check.png" Height="15" Width="16" HorizontalAlignment="Left"></Image>
                                <ContentPresenter x:Name="content" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 0 0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="UnCheck" Property="Visibility" Value="Hidden"/>
                                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                                    <Setter Property="Foreground" Value="#8e8f98"/>

                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="UnCheck" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="Check" Property="Visibility" Value="Hidden"/>
                                    <Setter Property="Foreground" Value="#5e5f66"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="#33000000"></Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="260"/>
            <ColumnDefinition Width="230"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="SCHEDULING" FontSize="10" Padding="15,10,0,10" Background="#12FFFFFF" Grid.ColumnSpan="3" FontFamily="{DynamicResource ResourceKey=Myraidproregular}"></TextBlock>
        <ScrollViewer Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Background="#08FFFFFF" Margin="0" Padding="5 25 0 25" Height="200" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"></ColumnDefinition>
                    <ColumnDefinition Width="50*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel  x:Name="PnlLeftUpdateSource" Grid.Column="0"></StackPanel>
                <StackPanel  x:Name="PnlRightUpdateSource" Grid.Column="1"></StackPanel>
            </Grid>
        </ScrollViewer>
        <Border x:Name="PnlScheduling" Grid.Row="1"  Background="#08FFFFFF" Grid.Column="2" Height="200" BorderThickness="0.5,0,0,0" BorderBrush="#4D808189" VerticalAlignment="Top">
            <Grid VerticalAlignment="Top" Margin="25,15,10,25" common:ReadOnlyPanel.IsReadOnly="{Binding IsUpdateSourceNotChecked}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding CanTransferEveryHours}" Command="{Binding ChangeScheduleCommand}"></CheckBox>
                <CheckBox Grid.Row="1" Grid.Column="0" IsChecked="{Binding CanTransferAfterNewContent}" Command="{Binding ChangeScheduleCommand}"></CheckBox>
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Text="Transfer every" FontSize="10" FontFamily="{DynamicResource ResourceKey=OpenSansRegular}"></TextBlock>
                    <TextBox Width="54" Height="30" BorderThickness="0" Padding="0 8" Margin="8 0 8 0" Background="#33000000" Foreground="White" BorderBrush="#33000000" TextAlignment="Center" FontSize="10" PreviewTextInput="NumberValidationTextBox" FontFamily="{DynamicResource ResourceKey=OpenSansRegular}"
		             DataObject.Pasting="TextBox_Pasting" Text="{Binding TransferEveryHours,TargetNullValue=''}" IsReadOnly="{Binding CanTransferEveryHours, Converter={StaticResource InvertBoolConverter}}" LostFocus="TxtTransferEveryHour_OnLostFocus"></TextBox>
                    <TextBlock Text="minutes" FontSize="10" FontFamily="{DynamicResource ResourceKey=OpenSansRegular}" Foreground="#8e8f98"></TextBlock>
                </StackPanel>
                <TextBlock Text="Transfer after new content arrived" Grid.Row="1" Grid.Column="1" FontSize="10" FontFamily="{DynamicResource ResourceKey=OpenSansRegular}" ></TextBlock>
            </Grid>
        </Border>
    </Grid>
</UserControl>