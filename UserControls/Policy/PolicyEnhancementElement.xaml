<UserControl x:Class="Tabidus.POC.GUI.UserControls.Policy.PolicyEnhancementElement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:common="clr-namespace:Tabidus.POC.GUI.Common"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ControlTemplate x:Key="PolicyEnhanceExpanderToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
          CornerRadius="0"
          BorderThickness="0" Background="{StaticResource ControlLightColorBrush}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlLightColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlLightColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <Image x:Name="CollapsedArrow" Width="14" Source="../../Images/ar.png" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>
                    <Image x:Name="ExpandededArrow" Width="14" Source="../../Images/arr.png" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"></Image>
                </Grid>
            </Border>
        </ControlTemplate>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{StaticResource TextblockLabelBrush}" />
            <Setter Property="Margin" Value="0,10,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow"
                                               Height="0" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                                    Grid.Row="0"
                                    BorderThickness="0"
                                    CornerRadius="0" Background="{StaticResource ControlLightColorBrush}" Height="45">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40" />
                                        <ColumnDefinition Width="130" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton OverridesDefaultStyle="True"
                                                  Template="{StaticResource PolicyEnhanceExpanderToggleButton}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                  RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Background>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="{StaticResource ControlLightColor}"
                                                              Offset="0" />
                                                <GradientStop Color="{StaticResource ControlMediumColor}"
                                                              Offset="1" />
                                            </LinearGradientBrush>
                                        </ToggleButton.Background>
                                    </ToggleButton>
                                    <StackPanel Grid.Column="1" Background="{StaticResource ControlLightColorBrush}" VerticalAlignment="Center">
                                        <Label Content="POC Agent"
                                            VerticalAlignment="Center"
                                            Foreground="White" />    
                                    </StackPanel>
                                    <DockPanel Grid.Column="2" Background="{Binding ExpanderBackgroundColor}" VerticalAlignment="Stretch">
                                        <Label Content="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}"
                                            VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center"
                                            Foreground="White" />
                                    </DockPanel>
                                </Grid>
                            </Border>
                            <Border x:Name="Content"
                                    Grid.Row="1"
                                    BorderThickness="0"
                                    CornerRadius="0">
                                <ContentPresenter Margin="20,0,0,0" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                     Value="True">
                                <Setter TargetName="ContentRow"
                                        Property="Height"
                                        Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Expander x:Name="Expander" Header="{Binding Name}">
        <Grid Margin="5">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Right" />
                    <Setter Property="Margin" Value="0,0,10,0" />
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="FontStyle" Value="Italic" />
                    <Setter Property="Height" Value="25" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Left" />
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="10" />
                <RowDefinition Height="1" />
                <RowDefinition Height="30" />
                <RowDefinition Height="1" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Text="UCC Server" />
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Port" />
            <TextBlock Grid.Row="2" Grid.Column="0" Text="Key" />
            <TextBlock Grid.Row="3" Grid.Column="0" Text="Synchronization Interval" />
            <TextBlock Grid.Row="6" Grid.Column="0" Text="Neighborhood Watch" />
            <TextBlock Grid.Row="8" Grid.Column="0" Text="Update Source" />
            <TextBlock Grid.Row="9" Grid.Column="0" Text="Active Transfer" />
            <TextBlock Grid.Row="10" Grid.Column="0" Text="Transfer Interval" />

            <Border BorderBrush="{StaticResource textblockColorCodeBrush}" BorderThickness="1" Grid.Row="5"
                    Grid.Column="0" Grid.ColumnSpan="2" />
            <Border BorderBrush="{StaticResource textblockColorCodeBrush}" BorderThickness="1" Grid.Row="7"
                    Grid.Column="0" Grid.ColumnSpan="2" />
            <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="Bold" FontStyle="Italic" Text="{Binding POCServer}" VerticalAlignment="Center"
                       HorizontalAlignment="Left" />
            <TextBlock Grid.Row="1" Grid.Column="1" FontWeight="Bold" FontStyle="Italic" Text="{Binding Port}" VerticalAlignment="Center"
                       HorizontalAlignment="Left" />
            <TextBlock Grid.Row="2" Grid.Column="1" FontWeight="Bold" FontStyle="Italic" Text="{Binding Key}" HorizontalAlignment="Left"
                       VerticalAlignment="Center" />
            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="{Binding SynchronizationInterval}" FontWeight="Bold" FontStyle="Italic" />
                <TextBlock Text="minutes" Margin="5,0,0,0" />
            </StackPanel>
            <StackPanel Grid.Row="10" Grid.Column="1" Orientation="Horizontal">
                <TextBlock Text="{Binding TransferInterval}" FontWeight="Bold" FontStyle="Italic" />
                <TextBlock Text="minutes" Margin="5,0,0,0" />
            </StackPanel>

            <!--<StackPanel  Grid.Column="1"
                      Grid.Row="6" Orientation="Horizontal">
                <CheckBox IsChecked="{Binding NeighborhoodWatch}" IsEnabled="False" />
                <TextBlock Foreground="#FFF" FontSize="12">Enables automatic discovery of neighboring devices on the network and reports them to central management</TextBlock>
            </StackPanel >-->
            <CheckBox Grid.Column="1"
                      Grid.Row="6" IsChecked="{Binding NeighborhoodWatch}" IsEnabled="False" />
            
            <CheckBox IsChecked="{Binding UpdateSource}" Grid.Column="1"
                      Grid.Row="8" IsEnabled="False" />
            <CheckBox IsChecked="{Binding ActiveTransfer}" Grid.Column="1"
                      Grid.Row="9" IsEnabled="False" />
        </Grid>
    </Expander>
</UserControl>