<UserControl x:Class="Tabidus.POC.GUI.UserControls.Policy.PolicyElement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:common="clr-namespace:Tabidus.POC.GUI.Common"
             xmlns:ig="http://schemas.infragistics.com/xaml"
             mc:Ignorable="d" >
    <UserControl.Resources>
        <ControlTemplate x:Key="ExpanderToggleButtonDirAssignment"
                 TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
          CornerRadius="0"
          BorderThickness="0" Background="{Binding ExpanderBackgroundColor}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlLightColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlLightColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
<!--                            <Storyboard>-->
<!--                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"-->
<!--                                           Storyboard.TargetName="CollapsedArrow">-->
<!--                                    <DiscreteObjectKeyFrame KeyTime="0"-->
<!--                                      Value="{x:Static Visibility.Hidden}" />-->
<!--                                </ObjectAnimationUsingKeyFrames>-->
<!--                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"-->
<!--                                           Storyboard.TargetName="ExpandededArrow">-->
<!--                                    <DiscreteObjectKeyFrame KeyTime="0"-->
<!--                                      Value="{x:Static Visibility.Visible}" />-->
<!--                                </ObjectAnimationUsingKeyFrames>-->
<!--                            </Storyboard>-->
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <!--<Image x:Name="CollapsedArrow" Width="50" Source="{Binding IsActived, Converter={StaticResource CollapsedImageConverter}}" Visibility="{Binding IsActived, Converter={StaticResource BoolToVisConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>-->
                    <Polygon Points="0,0 13,23,0,46" Stroke="{Binding ExpanderBackgroundColor}" Fill="{Binding ExpanderBackgroundColor}" HorizontalAlignment="Right" Margin="0 0 -13 0" Visibility="{Binding IsActived, Converter={StaticResource BoolToVisConverter}}"/>
                    <!--<Path Width="23" Height="45" Margin="0 0 -66 0" Stretch="Fill" Stroke="{Binding ExpanderBackgroundColor}" Fill="{Binding ExpanderBackgroundColor}" Data="F1 M 319.344,237.333L 287.328,218.849L 287.328,255.818L 319.344,237.333 Z " Visibility="{Binding IsActived, Converter={StaticResource BoolToVisConverter}}"/>-->
                </Grid>
            </Border>
        </ControlTemplate>
        <Style x:Key="ExpanHeaderPolicyButton" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Padding" Value="0 5 5 5" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								RecognizesAccessKey="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{StaticResource TextblockLabelBrush}"></Setter>
            <Setter Property="Margin" Value="0,0,0,10"></Setter>
            <Setter Property="FontSize" Value="11"></Setter>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"></Setter>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow"
                           Height="0" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                  Grid.Row="0"
                  BorderThickness="0"
                  CornerRadius="0" Background="{Binding ExpanderBackgroundColor}" Height="45">
                                <ig:DragDropManager.DragSource>
                                    <ig:DragSource IsDraggable="True"
                                                   Drop="DragSource_Drop"
                                                   DragOver="DragSource_DragOver"
                                                   DragStart="DragSource_DragStart"
                                                   DragLeave="DragSource_OnDragLeave"
                                                   DragEnter="DragSource_DragEnter" DragEnd="DragSource_OnDragEnd" />
                                </ig:DragDropManager.DragSource>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="35" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="35" />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="CbExpandHeader" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding IsSelected}" Command="{Binding ChangeSelectedCommand}"></CheckBox>
                                    <ToggleButton x:Name="ToggleButton" Grid.Column="2" OverridesDefaultStyle="True"
                            Template="{StaticResource ExpanderToggleButtonDirAssignment}"
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                  RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Background>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                       StartPoint="0.5,0">
                                                <GradientStop Color="{Binding ExpanderBackgroundColor}"
                                  Offset="0" />
                                                <GradientStop Color="{Binding ExpanderBackgroundColor}"
                                  Offset="1" />
                                            </LinearGradientBrush>
                                        </ToggleButton.Background>
                                    </ToggleButton>
                                    <Label x:Name="BtnExpandHeader" Grid.Column="1" Content="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsNotAddState, Converter={StaticResource BoolToVisConverter}}" Foreground="#FFF" MouseLeftButtonDown="Expander_OnExpanded">
                                    </Label>
                                    <TextBox x:Name="TbExpandHeader" Grid.Column="1" Text="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" Height="25" FontSize="14" VerticalContentAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsAddState, Converter={StaticResource BoolToVisConverter}}"></TextBox>
                                </Grid>
                            </Border>
                            <Border x:Name="Content"
                  Grid.Row="1"
                  BorderThickness="0"
                  CornerRadius="0">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                   Value="True">
                                <Setter TargetName="ContentRow"
                    Property="Height"
                    Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Expander x:Name="Expander" Header="{Binding Name}">
    </Expander>
</UserControl>
