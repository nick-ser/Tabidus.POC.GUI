<UserControl x:Class="Tabidus.POC.GUI.UserControls.Discovery.LDAPDomainExpanderElement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:w="clr-namespace:Tabidus.POC.GUI.Common"
             mc:Ignorable="d" FontFamily="{DynamicResource ResourceKey=OpenSansRegular}" >
    <UserControl.Resources>
        <ControlTemplate x:Key="ExpanderToggleButtonLDAP"
                 TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
              CornerRadius="0"
              BorderThickness="0" Background="Transparent">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlLightColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlLightColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <Image x:Name="CollapsedArrow" Width="14" Source="{Binding IsActived, Converter={StaticResource CollapsedImageConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>
                    <Image x:Name="ExpandededArrow" Width="14" Source="{Binding IsActived, Converter={StaticResource ExpandedImageConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"></Image>
                </Grid>
            </Border>
        </ControlTemplate>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{StaticResource TextblockLabelBrush}"></Setter>
            <Setter Property="Margin" Value="0,10,0,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow"
                           Height="0" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BorderLdap"
                  Grid.Row="0"
                  BorderThickness="0"
                  CornerRadius="0" Background="{Binding ExpanderBackgroundColor}" Height="45">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="0" />
                                        <ColumnDefinition Width="10" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="ToggleButton" OverridesDefaultStyle="True"
                            Template="{StaticResource ExpanderToggleButtonLDAP}"
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                  RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Background>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                       StartPoint="0.5,0">
                                                <GradientStop Color="{Binding ExpanderBackgroundColor}"
                                  Offset="0" />
                                                <GradientStop Color="{Binding ExpanderBackgroundColor}"
                                  Offset="1" />
                                            </LinearGradientBrush>
                                        </ToggleButton.Background>
                                    </ToggleButton>
                                    <TextBlock Text="{Binding ComputerCount}" Grid.Column="2" TextAlignment="Right" Margin="0,0,5,0" Visibility="{Binding IsLoading, Converter={StaticResource InvertBoolToVisConverter}}" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{Binding TextNoColor}" FontFamily="{DynamicResource ResourceKey=Myraidproregular}" FontSize="15"></TextBlock>
                                    <Button x:Name="BtnExpandHeader" Grid.Column="1" Command="{Binding ShowLDAPDirectory}" Content="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpanHeaderButton}" Foreground="{Binding TextColor}" Click="BtnExpandHeader_OnClick"></Button>
                                    <!--                                    <TextBlock x:Name="TbExpandHeader" Grid.Column="1" Text="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" Height="25" FontSize="14"  VerticalAlignment="Center" Visibility="{Binding IsAddState, Converter={StaticResource BoolToVisConverter}}"></TextBlock>-->
                                    <Canvas Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40" Height="40" Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisConverter}}">
                                        <Canvas.RenderTransform>
                                            <RotateTransform CenterX="20" CenterY="20" Angle="{Binding LoadingAngle}"></RotateTransform>
                                        </Canvas.RenderTransform>
                                        <Ellipse Width="10" Height="10" Fill="#000000" Opacity="0.8" Canvas.Left="15">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform CenterX="5" CenterY="20" Angle="0"></RotateTransform>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Width="2" Height="2" Fill="#000000" Opacity="0.1" Canvas.Left="19" Canvas.Top="4">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform CenterX="1" CenterY="16" Angle="45"></RotateTransform>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Width="3" Height="3" Fill="#000000" Opacity="0.2" Canvas.Left="18" Canvas.Top="4">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform CenterX="2" CenterY="17" Angle="90"></RotateTransform>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Width="4" Height="4" Fill="#000000" Opacity="0.3" Canvas.Left="18" Canvas.Top="3">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform CenterX="2" CenterY="17" Angle="135"></RotateTransform>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Width="5" Height="5" Fill="#000000" Opacity="0.4" Canvas.Left="17" Canvas.Top="2">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform CenterX="2" CenterY="18" Angle="180"></RotateTransform>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Width="6" Height="6" Fill="#000000" Opacity="0.5" Canvas.Left="17" Canvas.Top="2">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform CenterX="3" CenterY="18" Angle="225"></RotateTransform>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Width="8" Height="8" Fill="#000000" Opacity="0.6" Canvas.Left="16" Canvas.Top="1">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform CenterX="4" CenterY="19" Angle="270"></RotateTransform>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse Width="9" Height="9" Fill="#000000" Opacity="0.7" Canvas.Left="16" Canvas.Top="1">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform CenterX="4" CenterY="19" Angle="315"></RotateTransform>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Canvas>
                                    <CheckBox x:Name="CbExpandHeader" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"></CheckBox>
                                </Grid>
                            </Border>
                            <Border x:Name="Content"
                  Grid.Row="1"
                  BorderThickness="0"
                  CornerRadius="0">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                   Value="True">
                                <Setter TargetName="ContentRow"
                    Property="Height"
                    Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Expander x:Name="Expander" Header="{Binding DomainName}" IsExpanded="{Binding IsExpanded}"
              Expanded="Expander_OnExpanded">
        <StackPanel Background="#0FFFFFFF">
            <Grid Margin="20 30 20 0" Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <w:Tracker x:Name="tracker" HorizontalAlignment="Left">
                    <Grid Background="Transparent">
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="10" />
                                <Setter Property="Foreground" Value="#FFF" />
                                <Setter Property="Margin" Value="30 0 0 10" />
                            </Style>
                            <!--<Style TargetType="CheckBox">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="0 0 0 10" />
                            </Style>-->
                            <Style TargetType="CheckBox">
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="Cursor" Value="Hand"></Setter>
                                <Setter Property="Content" Value=""></Setter>
                                <Setter Property="Background" Value="#33000000"></Setter>
                                <Setter Property="Margin" Value="0 0 0 10"></Setter>
                                <Setter Property="FontSize" Value="10"></Setter>
                                <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=OpenSansRegular}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type CheckBox}">
                                            <Grid>
                                                <Image x:Name="UnCheck" Source="../../Images/box.png" Width="15" Height="16"  HorizontalAlignment="Left"></Image>
                                                <Image x:Name="Check" Source="../../Images/check.png" Width="15" Height="16"  HorizontalAlignment="Left"></Image>
                                                <ContentPresenter x:Name="content"  HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30 0 0 0"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="UnCheck" Property="Visibility" Value="Hidden"/>
                                                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter TargetName="UnCheck" Property="Visibility" Value="Visible"/>
                                                    <Setter TargetName="Check" Property="Visibility" Value="Hidden"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                            </Style>
                            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                                <Border x:Name="PART_ContentHost" Focusable="True" />
                            </ControlTemplate>

                            <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="22" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Border
										x:Name="Border"
										Grid.ColumnSpan="2"
										CornerRadius="0"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="0"/>
                                                <Border
										Grid.Column="1"
										CornerRadius="0"
										Background="Transparent"
									    HorizontalAlignment="Right"
										BorderBrush="Transparent"
									    Margin="0 0 12 0"
										BorderThickness="10" />
                                                <Path
										x:Name="Arrow"
										Grid.Column="1"
										Stroke="Gray"
										HorizontalAlignment="Right"
										VerticalAlignment="Center"
									    Margin="0 0 15 0"
										Data="M0 0 L6 6 L12 0" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                                    <Setter Property="Foreground"
										        Value="White" />
                                                    <Setter Property="Foreground"
									            Value="Red" />
                                                    <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style TargetType="{x:Type ComboBox}">
                                <Setter Property="Foreground" Value="{StaticResource textblockColorCodeBrush}" />
                                <Setter Property="Background" Value="#4D000000" />
                                <Setter Property="SnapsToDevicePixels" Value="true" />
                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=OpenSansRegular}" />
                                <Setter Property="MinWidth" Value="144" />
                                <Setter Property="Height" Value="30" />
                                <Setter Property="Margin" Value="0 0 0 10" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ComboBox">
                                            <Grid>
                                                <ToggleButton
										Name="ToggleButton"
										BorderBrush="{TemplateBinding BorderBrush}"
										Background="{TemplateBinding Background}"
										Foreground="{TemplateBinding Foreground}"
										Style="{StaticResource ComboBoxToggleButton}"
										Grid.Column="2"
										Focusable="false"
										IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
										ClickMode="Press" />
                                                <ContentPresenter
										Name="ContentSite"
										IsHitTestVisible="False"
										Content="{TemplateBinding SelectionBoxItem}"
										ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
										ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
										Margin="10,3,3,3"
										VerticalAlignment="Center"
										HorizontalAlignment="Left" />
                                                <TextBox x:Name="PART_EditableTextBox"
									         Style="{x:Null}"
									         Template="{StaticResource ComboBoxTextBox}"
									         HorizontalAlignment="Center"
									         VerticalAlignment="Center"
									         Margin="3,3,23,3"
									         Focusable="True"
									         Visibility="Hidden"
									         IsReadOnly="{TemplateBinding IsReadOnly}" />
                                                <Popup
										Name="Popup"
										Placement="Bottom"
										IsOpen="{TemplateBinding IsDropDownOpen}"
										AllowsTransparency="True"
										Focusable="False"
										PopupAnimation="Slide">
                                                    <Grid
											Name="DropDown"
											SnapsToDevicePixels="True"
											MinWidth="{TemplateBinding ActualWidth}"
											MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                        <Border
												x:Name="DropDownBorder"
												Background="#2b2b2b"
												BorderThickness="0"
												BorderBrush="{TemplateBinding Foreground}" />
                                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                        </ScrollViewer>
                                                    </Grid>
                                                </Popup>

                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="false">
                                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                                </Trigger>
                                                <Trigger Property="IsGrouping" Value="true">
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                                </Trigger>
                                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                                                </Trigger>
                                                <Trigger Property="IsEditable" Value="true">
                                                    <Setter Property="IsTabStop" Value="false" />
                                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="Background" Value="Red" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>


                            <Style TargetType="TextBox">
                                <!--<Setter Property="Height" Value="30" />-->
                                <Setter Property="Width" Value="184"></Setter>
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                                <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>

                                <Setter Property="Background" Value="Transparent"></Setter>
                                <!--<Setter Property="Background" Value="#4D000000"></Setter>-->
                                <Setter Property="BorderThickness" Value="0"></Setter>
                                <!--<Setter Property="Padding" Value="15 10"></Setter>-->
                                <Setter Property="Margin" Value="5 7" />
                                <Setter Property="Foreground" Value="{StaticResource textblockColorCodeBrush}" />
                                <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=OpenSansRegular}" />
                            </Style>
                            <Style TargetType="PasswordBox">
                                <!--<Setter Property="Height" Value="30" />-->
                                <Setter Property="Width" Value="184"></Setter>
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <!--<Setter Property="Background" Value="#4D000000"></Setter>-->
                                <Setter Property="BorderThickness" Value="0"></Setter>
                                <Setter Property="Margin" Value="5 7"></Setter>
                                <!--<Setter Property="Margin" Value="0 0 0 10" />-->
                                <Setter Property="Foreground" Value="{StaticResource textblockColorCodeBrush}" />
                                <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=OpenSansRegular}" />
                                <!--<Setter Property="Foreground" Value="#FFFFFFFF" />-->
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="27" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0" />
                            <ColumnDefinition Width="130" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="5" />
                        </Grid.ColumnDefinitions>
                        <!--Type-->
                        <TextBlock Text="Type" Grid.Row="0" Grid.Column="1" ></TextBlock>
                        <ComboBox Grid.Row="0"  Grid.Column="3" ItemsSource="{Binding LDAPtypes}" SelectedValue="{Binding LDAPTypeSelected}" w:Tracker.Property="SelectedValue"></ComboBox>
                        <!--Domain-->
                        <!--<TextBlock Text="Domain" Grid.Row="1" Grid.Column="1" ></TextBlock>
                        <TextBox Grid.Row="1" Text="{Binding DomainName}" w:Tracker.Property="Text" Grid.Column="3" Padding="20" ></TextBox>
                        -->
                        <!--Server-->
                        <!--
                        <TextBlock Text="Server" Grid.Row="2" Grid.Column="1"></TextBlock>
                        <TextBox Grid.Row="2" Text="{Binding Server}" w:Tracker.Property="Text" Grid.Column="3" ></TextBox>
                        -->
                        <!--Port-->
                        <!--
                        <TextBlock Text="Port" Grid.Row="3" Grid.Column="1"  VerticalAlignment="Top"></TextBlock>
                        <TextBox Grid.Row="3" Text="{Binding Port}" w:Tracker.Property="Text" PreviewTextInput="NumberValidationTextBox"
		                 DataObject.Pasting="TextBox_Pasting" Grid.Column="3"></TextBox>
                        <CheckBox Foreground="{StaticResource textblockColorCodeBrush}" Grid.Row="4" Grid.Column="3" IsChecked="{Binding IsSecure}" Content="Secure LDAP" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0" Visibility="Collapsed"></CheckBox>
                        -->
                        <!--User-->
                        <!--
                        <TextBlock Text="User" Grid.Row="5" Grid.Column="1" ></TextBlock>
                        <TextBox Grid.Row="5" Grid.Column="3" Text="{Binding User}" w:Tracker.Property="Text"></TextBox>
                        -->
                        <!--Password-->
                        <!--
                        <TextBlock Text="Password" Grid.Row="6" Grid.Column="1"></TextBlock>
                        <PasswordBox Grid.Row="6" Grid.Column="3" PasswordChar="*" Tag="{Binding Password}" w:Tracker.Property="Tag" w:PasswordHelper.BindPassword="True" w:PasswordHelper.BoundPassword="{Binding Password,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></PasswordBox>
                        -->
                        <!--interval-->
                        <!--
                        <TextBlock Text="Sync Interval" Grid.Row="7" Grid.Column="1" ></TextBlock>
                        <StackPanel  Grid.Row="7" Grid.Column="3"  Orientation="Horizontal" Margin="0 20 0 30" >
                            <TextBox Text="{Binding SyncInterval}" w:Tracker.Property="Text" PreviewTextInput="NumberValidationTextBox"
		                 DataObject.Pasting="TextBox_Pasting"></TextBox>
                            -->
                        <!--<TextBlock Text="minutes" Padding="10 0 0 0 " VerticalAlignment="Center" ></TextBlock>-->
                        <!--
                        </StackPanel>-->
                        <TextBlock Text="Domain" Grid.Row="1" Grid.Column="1" ></TextBlock>
                        <StackPanel Background="#4D000000" Height="30" Grid.Row="1" Grid.Column="3" Margin="0 0 0 10">
                            <TextBox Text="{Binding DomainName}" w:Tracker.Property="Text" ></TextBox>
                        </StackPanel>
                        <!--Server-->
                        <TextBlock Text="Server" Grid.Row="2" Grid.Column="1"></TextBlock>
                        <StackPanel Background="#4D000000" Height="30" Grid.Row="2" Grid.Column="3" Margin="0 0 0 10">
                            <TextBox Text="{Binding Server}" w:Tracker.Property="Text" ></TextBox>
                        </StackPanel>
                        <!--Port-->
                        <TextBlock Text="Port" Grid.Row="3" Grid.Column="1"></TextBlock>
                        <StackPanel Background="#4D000000" Height="30" Grid.Row="3" Grid.Column="3" Margin="0 0 0 10">
                            <TextBox Text="{Binding Port}" w:Tracker.Property="Text" PreviewTextInput="NumberValidationTextBox" DataObject.Pasting="TextBox_Pasting" ></TextBox>
                        </StackPanel>
                        <CheckBox Foreground="{StaticResource textblockColorCodeBrush}" Grid.Row="4" Grid.Column="3" IsChecked="{Binding IsSecure}" Content="Secure LDAP" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0" Visibility="Collapsed"></CheckBox>
                        <!--User-->
                        <TextBlock Text="User" Grid.Row="5" Grid.Column="1" ></TextBlock>
                        <StackPanel Background="#4D000000" Height="30" Grid.Row="5" Grid.Column="3" Margin="0 0 0 10">
                            <TextBox Text="{Binding User}" w:Tracker.Property="Text"></TextBox>
                        </StackPanel>
                        <!--Password-->
                        <TextBlock Text="Password" Grid.Row="6" Grid.Column="1"></TextBlock>
                        <StackPanel Background="#4D000000" Height="30" Grid.Row="6" Grid.Column="3" Margin="0 0 0 10">
                            <PasswordBox PasswordChar="*" Tag="{Binding Password}" w:Tracker.Property="Tag" w:PasswordHelper.BindPassword="True" w:PasswordHelper.BoundPassword="{Binding Password,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></PasswordBox>
                        </StackPanel>
                        <!--interval-->
                        <TextBlock Text="Sync Interval" Grid.Row="7" Grid.Column="1" ></TextBlock>
                        <StackPanel Background="#4D000000" Grid.Row="7" Grid.Column="3" Orientation="Horizontal" Margin="0 20 0 30" >
                            <TextBox Text="{Binding SyncInterval}" w:Tracker.Property="Text" PreviewTextInput="NumberValidationTextBox" DataObject.Pasting="TextBox_Pasting"></TextBox>
                            <!--<TextBlock Text="minutes" Padding="10 0 0 0 " VerticalAlignment="Center" ></TextBlock>-->
                        </StackPanel>
                        <!--Check box group-->
                        <CheckBox Foreground="{StaticResource textblockColorCodeBrush}" w:Tracker.Property="IsChecked" Grid.Row="8" IsChecked="{Binding IsShowEndpoints}" Grid.Column="3" Content="Show endpoints" HorizontalAlignment="Left"></CheckBox>
                        <CheckBox Foreground="{StaticResource textblockColorCodeBrush}" w:Tracker.Property="IsChecked" Grid.Row="9" IsChecked="{Binding IsShowFolders}" Grid.Column="3" Content="Show folders" HorizontalAlignment="Left"></CheckBox>
                        <CheckBox Foreground="{StaticResource textblockColorCodeBrush}" w:Tracker.Property="IsChecked" Grid.Row="10" IsChecked="{Binding IsHideEmptyFolders}"  Grid.Column="3" Content="Hide empty folders" HorizontalAlignment="Left" ></CheckBox>
                        <CheckBox Foreground="{StaticResource textblockColorCodeBrush}" w:Tracker.Property="IsChecked" Grid.Row="11" IsChecked="{Binding IsHideManagedEndPoints}"  Grid.Column="3" Content="Hide managed endpoints" HorizontalAlignment="Left"></CheckBox>
                    </Grid>
                </w:Tracker>
                <Grid Grid.Row="1"  Background="#0FFFFFFF" Margin="-20 20 -20 0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*"></ColumnDefinition>
                        <ColumnDefinition Width="50*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button Content="SYNC NOW" Command="{Binding SyncNowCommand}" Grid.Column="0" Width="90" Height="Auto" HorizontalAlignment="Right" Style="{StaticResource LDAPButton}" FontSize="10" FontFamily="{DynamicResource ResourceKey=OpenSansRegular}"></Button>
                    <Button x:Name="BtnSave" Content="SAVE" Command="{Binding SaveCommand}" Grid.Column="1" Width="90" Height="Auto" HorizontalAlignment="Left"  Style="{StaticResource LDAPButton}" Margin="-1 0 0 0" IsEnabled="{Binding IsChanged, ElementName=tracker}" FontSize="10" FontFamily="{DynamicResource ResourceKey=OpenSansRegular}"></Button>
                </Grid>
            </Grid>
        </StackPanel>
    </Expander>
</UserControl>
